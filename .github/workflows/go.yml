name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24' # 根据你的项目需求调整版本
          cache: true

      - name: Get version
        id: get_version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Get commit count
        id: get_commit_count
        run: |
          echo "COMMIT_COUNT=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT

      - name: Run tests
        run: |
          go test -v ./...

      - name: Build binaries
        run: |
          mkdir -p release
          
          # Windows
          echo "Building for Windows..."
          GOOS=windows GOARCH=amd64 go build -o release/PushServer-windows-amd64.exe -ldflags "-s -w -X main.version=${{ steps.get_version.outputs.VERSION }} -X main.commit=$(git rev-parse HEAD) -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" .
          
          # Linux
          echo "Building for Linux..."
          GOOS=linux GOARCH=amd64 go build -o release/PushServer-linux-amd64 -ldflags "-s -w -X main.version=${{ steps.get_version.outputs.VERSION }} -X main.commit=$(git rev-parse HEAD) -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" .
          GOOS=linux GOARCH=arm64 go build -o release/PushServerp-linux-arm64 -ldflags "-s -w -X main.version=${{ steps.get_version.outputs.VERSION }} -X main.commit=$(git rev-parse HEAD) -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" .
          
          # macOS
          echo "Building for macOS..."
          GOOS=darwin GOARCH=amd64 go build -o release/PushServer-darwin-amd64 -ldflags "-s -w -X main.version=${{ steps.get_version.outputs.VERSION }} -X main.commit=$(git rev-parse HEAD) -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" .
          GOOS=darwin GOARCH=arm64 go build -o release/PushServer-darwin-arm64 -ldflags "-s -w -X main.version=${{ steps.get_version.outputs.VERSION }} -X main.commit=$(git rev-parse HEAD) -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" .
          
          # FreeBSD
          echo "Building for FreeBSD..."
          GOOS=freebsd GOARCH=amd64 go build -o release/PushServer-freebsd-amd64 -ldflags "-s -w -X main.version=${{ steps.get_version.outputs.VERSION }} -X main.commit=$(git rev-parse HEAD) -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" .

      - name: Create checksums
        run: |
          cd release
          sha256sum * > checksums.txt
          cat checksums.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          tag_name: ${{ github.ref }}
          body: |
            ## Changes in ${{ steps.get_version.outputs.VERSION }}
            
            ### 📦 Downloads
            - Windows AMD64: `PushServer-windows-amd64.exe`
            - Linux AMD64: `PushServer-linux-amd64`
            - Linux ARM64: `PushServer-linux-arm64`
            - macOS AMD64: `PushServer-darwin-amd64`
            - macOS ARM64: `PushServer-darwin-arm64`
            - FreeBSD AMD64: `PushServer-freebsd-amd64`
            
            ### 📋 Checksums
            See `checksums.txt` for SHA256 checksums of all binaries.
            
            ### 📊 Build Info
            - Commit: ${{ github.sha }}
            - Build Date: $(date -u +%Y-%m-%dT%H:%M:%SZ)
            - Commit Count: ${{ steps.get_commit_count.outputs.COMMIT_COUNT }}
          draft: false
          prerelease: false
          files: |
            release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
